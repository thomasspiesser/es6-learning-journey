{"version":3,"sources":["../code/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["// destructuring assignment\n// for arrays\nlet a, b, c, rest;\n\nlet arr = [1, 2, 3, 4, 5];\n\n[a, b] = arr;\n\nconsole.log(a);\nconsole.log(b);\n\n[a, b, ...rest] = arr;\n\nconsole.log(a);\nconsole.log(b);\nconsole.log(rest);\n\n// can have default values!\n[a, b, c=9, ...rest] = arr;\n\nconsole.log(a);\nconsole.log(b);\nconsole.log(c);\nconsole.log(rest);\n\n// or ignore values\n\n[a,,c,...rest] = arr;\n\nconsole.log(a);\nconsole.log(b);\nconsole.log(c);\nconsole.log(rest);\n\n// for objects\nlet ob = {w:51, q:61};\n// with declaration\nlet {w, q} = ob;\nconsole.log(w);\nconsole.log(q);\n// or without -> need brackets otherwise considered a block\n({w, q} = ob)\nconsole.log(w);\nconsole.log(q);\n\n// new variable names\nlet {w: peter, q: otto} = ob;\nconsole.log('peter');\nconsole.log(peter);\nconsole.log('otto');\nconsole.log(otto);\n\n// default values\n({a=10, b=5} = {a: 3});\nconsole.log(a);\nconsole.log(b);\n\n// function parameter default value\nfunction test({par1='here', par2='there'} = {}) {\n  console.log(par1, par2);\n}\n\ntest();\ntest({par2:'thomas'});\n\n// Nested object for destructuring\nlet data = {\n  title: 'data-title',\n  translation: {\n    locale: 'de',\n    title: 'Daten-Titel'\n  },\n}\nlet {title: englishTitle, translation: { title: germanTitle }} = data;\nconsole.log(englishTitle, germanTitle);\n// or with arrays\ndata = {\n  title: 'data-title',\n  translations: [\n    {\n      locale: 'de',\n      title: 'Daten-Titel'\n    },\n    {\n      locale: 'fr',\n      title: 'titre des data'\n    },\n  ],\n};\nlet frenchTitle;\n({ title: englishTitle, translations: [{ title: germanTitle }, { title: frenchTitle }] } = data);\nconsole.log(englishTitle, germanTitle, frenchTitle);\n\n// for of iteration and destructuring\nfor (let {title: t, locale: l} of data.translations) {\n  console.log(`Title: ${t}, language: ${l}`);\n}\n\n// pull fields from object passed as function params\nfunction userId({id}) {\n  return id;\n}\nfunction whois({displayName: displayName, fullName: {firstName: name}}){\n  console.log(displayName + \" is \" + name);\n}\n\nvar user = { \n  id: 42, \n  displayName: \"jdoe\",\n  fullName: { \n      firstName: \"John\",\n      lastName: \"Doe\"\n  }\n};\n\nconsole.log(\"userId: \" + userId(user)); // \"userId: 42\"\nwhois(user); // \"jdoe is John\"\n\n// computed object property names\nlet key = \"z\";\nlet obj = { z: \"peter\" }\nlet { [key]: onkel } = obj;\n\nconsole.log(onkel);\n"]}