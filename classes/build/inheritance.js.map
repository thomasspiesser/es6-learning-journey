{"version":3,"sources":["../code/inheritance.js"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;;;;;IAEM;;;AACJ,WADI,aACJ,CAAY,IAAZ,EAAkB,SAAlB,EAA6B;0BADzB,eACyB;;uEADzB,0BAEI,OADqB;;AAE3B,UAAK,UAAL,GAAkB,SAAlB,CAF2B;;GAA7B;;eADI;;mCAKW;AACb,UAAI,KAAK,UAAL,EAAiB;AACnB,eAAO,KAAK,UAAL,CADY;OAArB,MAEO;AACL,eAAO,2BAAP,CADK;OAFP;;;;0BAMI,WAAW;AACf,WAAK,UAAL,GAAkB,SAAlB,CADe;;;;mCAGH;AACZ,cAAQ,GAAR,4BAhBE,oDAgBF,EADY;AAEZ,cAAQ,GAAR,CAAY,WAAZ,EAFY;;;;SAfV;;;AAoBN,IAAM,OAAO,IAAI,aAAJ,CAAmB,OAAnB,CAAP;;AAEN,QAAQ,GAAR,CAAY,gBAAZ;;AAEA,QAAQ,GAAR,CAAY,KAAK,OAAL,EAAZ;AACA,QAAQ,GAAR,CAAY,KAAK,YAAL,EAAZ;AACA,KAAK,KAAL,CAAW,SAAX;AACA,QAAQ,GAAR,CAAY,KAAK,YAAL,EAAZ;;AAEA,KAAK,IAAL,GAAY,SAAZ;;AAEA,KAAK,YAAL","file":"inheritance.js","sourcesContent":["import Employee from './classes.js';\n\nclass Subcontractor extends Employee {\n  constructor(name, specialty) {\n    super(name);\n    this._specialty = specialty;\n  }\n  logSpecialty() {\n    if (this._specialty) {\n      return this._specialty;\n    } else {\n      return \"can't do anything special\";\n    }\n  }\n  learn(specialty) {\n    this._specialty = specialty;\n  }\n  useSuperWork(){\n    console.log( super.doWork() );\n    console.log('something');\n  }\n}\nconst hire = new Subcontractor( 'Peter' );\n\nconsole.log('\\nnew hire: \\n');\n\nconsole.log(hire.getName());\nconsole.log(hire.logSpecialty());\nhire.learn('cooking');\nconsole.log(hire.logSpecialty());\n\nhire.name = 'Peterle'\n\nhire.useSuperWork();\n"]}